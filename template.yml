AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  basic-ruby

  Sample SAM Template for basic-ruby

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3
Parameters:
  MaxFileSize:
    Type: Number
    Description: The max size in MB of the file being uploaded
    Default: 5
    MaxValue: 25
    MinValue: 5
    ConstraintDescription: The max file size can only be between 5MB and 25MB
  UrlExpiration:
    Type: Number
    Default: 10
    Description: The  max length of time in minutes that the user has to upload or download a file
    MinValue: 1
    MaxValue: 20
    ConstraintDescription: The minimum expiration time for a link 1 minute. The maxium expiration time is 20 minutes.
  AppStage:
    Type: String
    Description: API Gateway stage, used as a prefix for the endpoint URLs
    Default: api
    AllowedPattern: ^[A-Za-z]+$
    MaxLength: 10
    MinLength: 1
    ConstraintDescription: "1-10 Latin letters"
  ContactEmail:
    Type: String
    Description: "Email to notify when CreateThumbnailFunction fails"
    Default: ''
Conditions:
  ContactEmailSet: !Not [ !Equals ['', !Ref ContactEmail]]
Resources:
  BasicRubyApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: !Ref AppStage
  ShowFormFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: user_form/
      Handler: show_form.UserForm::ShowForm.handler
      Runtime: ruby2.7
      Events:
        ShowForm:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /
            Method: get
            RestApiId: !Ref BasicRubyApi
      AutoPublishAlias: live
      DeploymentPreference:
        Type: AllAtOnce
      Policies:
        - S3FullAccessPolicy:
            BucketName: !Ref ProcessFormBucket
      Environment:
        Variables:
          PROCESS_FORM_BUCKET: !Ref ProcessFormBucket
          MAX_FILE_SIZE: !Ref MaxFileSize
          URL_EXPIRATION: !Ref UrlExpiration
  ConfirmUploadFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: user_form/
      Handler: confirm_upload.UserForm::ConfirmUpload.handler
      Runtime: ruby2.7
      Events:
        ConfirmUpload:
          Type: Api
          Properties:
            Path: /confirm
            Method: get
            RestApiId: !Ref BasicRubyApi
      Policies:
        - S3FullAccessPolicy:
            BucketName: !Ref ThumbnailBucket
      Environment:
       Variables:
          IMAGE_DOWNLOAD_BUCKET: !Ref ThumbnailBucket
          URL_EXPIRATION: !Ref UrlExpiration
      AutoPublishAlias: live
      DeploymentPreference:
        Type: AllAtOnce
  CreateThumbnailFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: image_processing/
      Handler: create_thumbnails.ImageProcessing::CreateThumbnail.handler
      Runtime: ruby2.7
      Timeout: 600
      Events:
        ImageUploaded:
          Type: S3
          Properties:
            Bucket: !Ref ProcessFormBucket
            Events: s3:ObjectCreated:*
      Policies:
        - S3FullAccessPolicy:
            BucketName: !Ref ThumbnailBucket
      Environment:
        Variables:
          THUMBNAIL_BUCKET: !Ref ThumbnailBucket
      AutoPublishAlias: live
      DeploymentPreference:
        Type: AllAtOnce
      DeadLetterQueue:
        Type: SNS
        TargetArn: !Ref NotifyAdmins
  ProcessFormBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: basic-ruby-process-form
  ThumbnailBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: basic-ruby-create-thumbnail
  CreateThumbnailFunctionCanReadProcessFormBucket:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: CreateThumbnailFunctionCanReadProcessFormBucket
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - "s3:GetObject"
            Resource:
              - !Sub "${ProcessFormBucket.Arn}/*"
      Roles:
        - !Ref CreateThumbnailFunctionRole
  NotifyAdmins:
    Type: AWS::SNS::Topic
  AlarmNotifySubscription:
    Type: AWS::SNS::Subscription
    Condition: ContactEmailSet
    Properties:
      Endpoint: !Ref ContactEmail
      Protocol: email
      TopicArn: !Ref NotifyAdmins




Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  BasicRubyApi:
    Description: "API Gateway endpoint URL for live stage for ShowForm function"
    Value: !Sub "https://${BasicRubyApi}.execute-api.${AWS::Region}.amazonaws.com/${AppStage}/"
  ShowFormFunction:
    Description: "Hello World Lambda Function ARN"
    Value: !GetAtt ShowFormFunction.Arn
  ShowFormFunctionIamRole:
    Description: "Implicit IAM Role created for Show Form function"
    Value: !GetAtt ShowFormFunctionRole.Arn
  ConfirmUploadFunction:
    Description: "Function to process form submissions"
    Value: !GetAtt ConfirmUploadFunction.Arn
  ProcessFormBucket:
    Description: "S3 Bucket that stores form submissions"
    Value: !Ref ProcessFormBucket
  CreateThumbnailFunction:
    Description: "Function to create image thumbnails"
    Value: !GetAtt CreateThumbnailFunction.Arn
  ThumbnailBucket:
    Description: "Bucket to store image thumbnails"
    Value: !Ref ThumbnailBucket


    # CreateThumbnailsFunction would need ProcessFormBucket to exist in order have the policy to read it
    # ProcessFormBucket needs CreateThumbnailFunction to exist in order to create Bucket Lifecycle event to invoke CreateThumbnailFunction
    # CreatThumbnailFunction needs Process